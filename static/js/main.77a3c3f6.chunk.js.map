{"version":3,"sources":["components/Form/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","color","setColor","value","setValue","rgb","setRgb","className","style","backgroundColor","maxlength","type","onChange","event","inputValue","target","length","result","hex","exec","r","parseInt","g","b","hexToRgb","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OA6CeA,MA1Cf,WAAiB,IAAD,EACgBC,mBAAS,UADzB,mBACJC,EADI,KACGC,EADH,OAEgBF,mBAAS,KAFzB,mBAEJG,EAFI,KAEGC,EAFH,OAGYJ,mBAAS,qBAHrB,mBAGJK,EAHI,KAGCC,EAHD,KAqBZ,OACI,uBAAMC,UAAU,OAAOC,MAAO,CAACC,gBAAiBR,GAAhD,UACI,8BACI,uBAAOS,UAAU,IAAIH,UAAU,aAAaI,KAAK,OAAOC,SAnB1C,SAAAC,GACtB,IAAMC,EAAaD,EAAME,OAAOZ,MAGhC,GAFAC,EAASU,GAELA,EAAWE,OAAS,GAAuB,MAAlBF,EAAW,GACpCV,EAAS,UAGb,GAA0B,IAAtBU,EAAWE,OAAf,CAGA,IAAMC,EAiBd,SAAkBC,GACd,IAAMD,EAAS,4CAA4CE,KAAKD,GAChE,OAAOD,EAAS,CACdG,EAAGC,SAASJ,EAAO,GAAI,IACvBK,EAAGD,SAASJ,EAAO,GAAI,IACvBM,EAAGF,SAASJ,EAAO,GAAI,KACrB,KAvBeO,CAASV,GACxBR,EAAoB,OAAXW,EAAoB,uCAAtB,cAAwCA,EAAOG,EAA/C,aAAqDH,EAAOK,EAA5D,aAAkEL,EAAOM,EAAzE,MACPrB,EAAsB,OAAXe,EAAoB,SAAWH,KAMmDX,MAAOA,MAEhG,qBAAKI,UAAU,cAAf,SACI,sBAAMA,UAAU,mBAAhB,SAAoCF,UCrBrCoB,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.77a3c3f6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Form.css';\r\n\r\nfunction Form() {\r\n    const [ color, setColor ] = useState('orange');\r\n    const [ value, setValue ] = useState('#');\r\n    const [ rgb, setRgb ] = useState('rgb($255, 165, 0)');\r\n\r\n    const handleChangeInput = event => {\r\n        const inputValue = event.target.value;\r\n        setValue(inputValue);\r\n\r\n        if (inputValue.length < 1 || inputValue[0] !== '#') {\r\n            setValue('#');\r\n            return;\r\n        }\r\n        if (inputValue.length !== 7) {\r\n            return;\r\n        }\r\n        const result = hexToRgb(inputValue);\r\n        setRgb(( result === null ) ? 'ошибка' : `rgb(${result.r}, ${result.g}, ${result.b})`);\r\n        setColor(( result === null ) ? 'orange' : inputValue);\r\n    }\r\n\r\n    return (\r\n        <form className='form' style={{backgroundColor: color}}>\r\n            <div>\r\n                <input maxlength='7' className='form-input' type=\"text\" onChange={handleChangeInput} value={value}/>\r\n            </div>\r\n            <div className='form-result'>\r\n                <span className='form-result-text'>{rgb}</span>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n\r\nexport default Form;","import './App.css';\nimport Form from './components/Form/Form';\n\nfunction App() {\n  return (\n    <Form />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}